
有限信使服务，不保隐私，只保护信息内容，不保护交流渠道，第三方无法获取信息内容，但可以获知信息的发送对象。
信使只进行签名/验签，不加密/解密。
访客友好，通过“工作量证明”机制对访客提供有条件的服务。
对普通用户和其他服务器一视同仁。

签名算法使用ed25519
公钥私钥长度32字节，签名64字节（和x25519的密钥长度一致）

使用udp协议

消息格式
消息长度 <= 508字节
签名64 + 时间戳8 + 发送者公钥32 + 接收者公钥32 + 指令8 + 载荷<=332
签名64 = ed25519(时间戳8 + 发送者公钥32 + 接收者公钥32 + 指令8 + 载荷<=332)
可用载荷508 - 64 - 8 - 32 - 32 - 8 = 364字节。
如果消息也加密，使用32位x25519公钥，并且公钥是一次性的，不需要nonce，则可用载荷364 - 32 = 332字节。
消息使用utf-8编码，则可以承载110个汉字。
如果需要长消息，在上层应用解决，信使不承担此指责。

消息100-心跳-用户发送给信使：
签名64 + 时间戳8 + 用户公钥32 + 信使公钥32 + 指令8
指令 = 0x100
长度 = 144

消息200-心跳-信使发送给用户：
签名64 + 时间戳8 + 信使公钥32 + 用户公钥32 + 指令8
指令 = 0x200
长度 = 144

消息102-常规信息-发送者发送给信使：
签名64 + 时间戳8 + 发送者公钥32 + 接收者公钥32 + 指令8 + 载荷
指令 = 0x102
载荷 = 任意
长度 <= 508

消息404-找不到接收者-信使回复给发送者：
签名64 + 时间戳8 + 信使公钥32 + 发送者公钥32 + 指令8 + 载荷
指令 = 0x404
载荷 = 消息102的签名
长度 = 144 + 64 = 208

消息202-消息已接收-信使回复给发送者：
签名64 + 时间戳8 + 信使公钥32 + 发送者公钥32 + 指令8 + 载荷
指令 = 0x202
载荷 = 消息102的签名
长度 = 144 + 64 = 208

消息402-需要工作量证明-信使回复给发送者：
签名64 + 时间戳8 + 信使公钥32 + 发送者公钥32 + 指令8 + 载荷
指令 = 0x402
载荷 = 消息102的签名
长度 = 144 + 64 = 208

消息103-提交工作量证明-发送者提交给信使：
签名64 + 时间戳8 + 发送者公钥32 + 信使公钥32 + 指令8 + 载荷
指令 = 0x103
载荷 = 消息206/402/406的签名 + S1 + S2
S1 = ed25519(消息206/402/406 + S2)
S1前n位应为0，具体多少位可以由服务器指定，无需公开，发送者可以从较少的位尝试，失败后增加位数直到成功。
长度 <= 508

消息101-将公钥加入白名单-用户提交给信使：
签名64 + 时间戳8 + 用户公钥32 + 信使公钥32 + 指令8 + 载荷
指令 = 0x101
载荷 = 加入白名单的公钥32 x n
长度 = 144 + 32 x n
32 x n < 332，n <= 10

消息201-加入白名单的结果-信使回复给用户：
签名64 + 时间戳8 + 用户公钥32 + 信使公钥32 + 指令8 + 载荷
指令 = 0x201
载荷 = 加入白名单的公钥32 x n
长度 = 144 + 32 x n
32 x n < 332，n <= 10

消息104-将公钥移出白名单-用户提交给信使：
签名64 + 时间戳8 + 用户公钥32 + 信使公钥32 + 指令8 + 载荷
指令 = 0x104
载荷 = 移出白名单的公钥32 x n
长度 = 144 + 32 x n
32 x n < 332，n <= 10

消息204-移出白名单的结果-信使回复给用户：
签名64 + 时间戳8 + 用户公钥32 + 信使公钥32 + 指令8 + 载荷
指令 = 0x204
载荷 = 移出白名单的公钥32 x n
长度 = 144 + 32 x n
32 x n < 332，n <= 10

消息106-申请成为用户-申请者提交给信息：
签名64 + 时间戳8 + 用户公钥32 + 信使公钥32 + 指令8 + 载荷
指令 = 0x106
载荷 = >64 <= 332 任意字节
长度 = > 144 + 64 <= 508
要求长度是为了防止放大攻击，保证信使回复的消息不小于接收的消息的长度

消息406-要求工作量证明-信使回复给申请者：
签名64 + 时间戳8 + 信使公钥32 + 发送者公钥32 + 指令8 + 载荷
指令 = 0x406
载荷 = 消息106的签名
长度 = 144 + 64 = 208

消息206-接受用户-信使回复给申请者：
签名64 + 时间戳8 + 信使公钥32 + 发送者公钥32 + 指令8 + 载荷
指令 = 0x206
载荷 = 随机（安全强度）64字节
长度 = 144 + 64 = 208

消息302-消息已接收-接收者回复给信使：
签名64 + 时间戳8 + 信使公钥32 + 发送者公钥32 + 指令8 + 载荷
指令 = 0x406
载荷 = 消息102的签名
长度 = 144 + 64 = 208

服务器逻辑

收到消息：
1、检查消息长度，如小于64 + 8 + 32 + 32 + 8 = 144字节，抛弃消息。
2、检查时间戳，与服务器时间差大于2^19（约8分44秒），抛弃消息。
3、校验签名，如失败，抛弃消息。
4、检查指令，确定消息类型。

消息100：
1、检查发送者是否是用户，如不是，抛弃消息。
2、记录用户地址与端口，记录时间戳，重置重试次数。
3、检查用户消息队列，如果非空，发送队首消息102。
4、如果用户消息队列为空，返回消息200。

消息102：
1、检查发送者是否是用户，如是，记录用户地址与端口，记录时间戳，重置重试次数。
2、检查用户消息队列，如果非空，发送队首消息102。
3、检查接收者公钥，如不在此服务器，返回消息404。
4、检查接收者白名单，如发送者在白名单内，接收消息102，存入接收者消息队列，返回消息202。
5、如发送者不在白名单内，接收消息102，存入暂存消息队列，要求发送者提交工作量证明，生成消息402并储存，返回消息402。

消息103：
1、检查发送者是否是用户，如是，记录用户地址与端口，记录时间戳，重置重试次数。
2、检查用户消息队列，如果非空，发送队首消息102。
3、检查工作量，如失败，抛弃消息。
4、根据消息206/402/406的签名，查找消息206/402/406，如果没有找到，抛弃消息。
5、检查消息206/402/406的时间戳，时间差大于2^n，抛弃消息。（n待定，暂定19，要在避免攻击和客户端压力间取得平衡）。
6、如果是消息206，记录生存时间戳，生成消息206并储存，返回消息206。
7、如果是消息402，从暂存消息队列取出消息102，存入接收者消息队列，返回消息202。
8、如果是消息406，将申请者公钥加入用户列表，记录生存时间戳，生成消息206并储存，返回消息206。

消息101/104：
1、检查发送者是否是用户，如不是，抛弃消息。
2、检查发送者是否是用户，如是，记录用户地址与端口，记录时间戳，重置重试次数。
3、检查用户消息队列，如果非空，发送队首消息102。
4、将载荷中的签名加入/移出用户的白名单，返回消息201/204。

消息106：
1、检查消息长度，如<208，抛弃消息。
2、检查发送者是否是用户，如是，记录用户地址与端口，记录时间戳，重置重试次数。
3、检查用户消息队列，如果非空，发送队首消息102。
4、如果发送者是用户，生成消息206并储存，返回消息206。
5、如果发送者不是用户，生成消息406并储存，返回消息406。

消息302：
1、检查发送者是否是用户，如不是，抛弃消息。
2、如果发送者是用户，记录用户地址与端口，记录时间戳，重置重试次数。
3、检查用户消息队列，如果非空，检查队首消息签名，如与载荷内消息签名相同，移除此消息。
4、发送队首消息102。

空闲时：
1、遍历用户。检查用户生存时间戳，对比当前时间与时间戳，如果差值大于常数c1，移除用户。
2、如果差值小于常数c1，如果用户已经激活，检查用户消息队列，如非空，检查时间戳。
3、对比当前时间与时间戳，如果差值小于常数c1x重试次数，继续等待。
4、如果差值大于常数c1x重试次数，检查重试次数，如大于c2，休眠用户（常数c1和c2待定）。
5、如果重试次数小于c2，记录时间戳，重置次数+1，发送消息102。

